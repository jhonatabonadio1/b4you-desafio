"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRoutes = void 0;
const express_1 = require("express");
const AuthUserController_1 = require("../controllers/AuthUserController");
const CreateUserController_1 = require("../controllers/CreateUserController");
const UpdateUserController_1 = require("../controllers/UpdateUserController");
const FetchUserController_1 = require("../controllers/FetchUserController");
const DeleteUserController_1 = require("../controllers/DeleteUserController");
const FetchUsersController_1 = require("../controllers/FetchUsersController");
const VerifyAuthMatriculaController_1 = require("../controllers/VerifyAuthMatriculaController");
const CreatePrestadorController_1 = require("../controllers/CreatePrestadorController");
const ensureIsAdmin_1 = require("../middlewares/ensureIsAdmin");
const UpdatePrestadorController_1 = require("../controllers/UpdatePrestadorController");
const FetchPrestadorController_1 = require("../controllers/FetchPrestadorController");
const DeletePrestadorController_1 = require("../controllers/DeletePrestadorController");
const FetchPrestadoresController_1 = require("../controllers/FetchPrestadoresController");
const AuthAdminController_1 = require("../controllers/AuthAdminController");
const FetchAdminController_1 = require("../controllers/FetchAdminController");
const CreateInformativoController_1 = require("../controllers/CreateInformativoController");
const UpdateInformativoController_1 = require("../controllers/UpdateInformativoController");
const DeleteInformativoController_1 = require("../controllers/DeleteInformativoController");
const FetchInformativoController_1 = require("../controllers/FetchInformativoController");
const FetchInformativosController_1 = require("../controllers/FetchInformativosController");
const CreateBrindeController_1 = require("../controllers/CreateBrindeController");
const UpdateBrindeController_1 = require("../controllers/UpdateBrindeController");
const DeleteBrindeController_1 = require("../controllers/DeleteBrindeController");
const FetchBrindeController_1 = require("../controllers/FetchBrindeController");
const FetchBrindesController_1 = require("../controllers/FetchBrindesController");
const FetchUsuarioBrindesController_1 = require("../controllers/FetchUsuarioBrindesController");
const ensureIsAuthenticated_1 = require("../middlewares/ensureIsAuthenticated");
const FetchConveniosController_1 = require("../controllers/FetchConveniosController");
const FetchConvenioController_1 = require("../controllers/FetchConvenioController");
const UpdateConveniosController_1 = require("../controllers/UpdateConveniosController");
const DeleteConvenioController_1 = require("../controllers/DeleteConvenioController");
const CreateConvenioController_1 = require("../controllers/CreateConvenioController");
const FetchUsuarioInformativos_1 = require("../controllers/FetchUsuarioInformativos");
const FetchUsuarioConvenios_1 = require("../controllers/FetchUsuarioConvenios");
const authRoutes = (0, express_1.Router)();
exports.authRoutes = authRoutes;
const verifyAuthMatriculaController = new VerifyAuthMatriculaController_1.VerifyAuthMatriculaController();
const authUserController = new AuthUserController_1.AuthUserController();
const createUserController = new CreateUserController_1.CreateUserController();
const updateUserController = new UpdateUserController_1.UpdateUserController();
const fetchUserController = new FetchUserController_1.FetchUserController();
const deleteUserController = new DeleteUserController_1.DeleteUserController();
const fetchUsersController = new FetchUsersController_1.FetchUsersController();
const createPrestadorController = new CreatePrestadorController_1.CreatePrestadorController();
const updatePrestadorController = new UpdatePrestadorController_1.UpdatePrestadorController();
const fetchPrestadorController = new FetchPrestadorController_1.FetchPrestadorController();
const deletePrestadorController = new DeletePrestadorController_1.DeletePrestadorController();
const fetchPrestadoresController = new FetchPrestadoresController_1.FetchPrestadoresController();
const authAdminController = new AuthAdminController_1.AuthAdminController();
const fetchAdminController = new FetchAdminController_1.FetchAdminController();
const createInformativoController = new CreateInformativoController_1.CreateInformativoController();
const updateInformativoController = new UpdateInformativoController_1.UpdateInformativoController();
const deleteInformativoController = new DeleteInformativoController_1.DeleteInformativoController();
const fetchInformativoController = new FetchInformativoController_1.FetchInformativoController();
const fetchInformativosController = new FetchInformativosController_1.FetchInformativosController();
const createBrindeController = new CreateBrindeController_1.CreateBrindeController();
const updateBrindeController = new UpdateBrindeController_1.UpdateBrindeController();
const deleteBrindeController = new DeleteBrindeController_1.DeleteBrindeController();
const fetchBrindeController = new FetchBrindeController_1.FetchBrindeController();
const fetchBrindesController = new FetchBrindesController_1.FetchBrindesController();
const fetchUsuarioBrindesController = new FetchUsuarioBrindesController_1.FetchUsuarioBrindesController();
const fetchUsuarioConveniosController = new FetchUsuarioConvenios_1.FetchUsuarioConveniosController();
const fetchUsuarioInformativosController = new FetchUsuarioInformativos_1.FetchUsuarioInformativosController();
const createConvenioController = new CreateConvenioController_1.CreateConvenioController();
const updateConvenioController = new UpdateConveniosController_1.UpdateConvenioController();
const deleteConvenioController = new DeleteConvenioController_1.DeleteConvenioController();
const fetchConvenioController = new FetchConvenioController_1.FetchConvenioController();
const fetchConveniosController = new FetchConveniosController_1.FetchConveniosController();
authRoutes.post('/admin/users', ensureIsAdmin_1.ensureIsAdmin, createUserController.handle);
authRoutes.put('/admin/users/:usuarioId', ensureIsAdmin_1.ensureIsAdmin, updateUserController.handle);
authRoutes.get('/admin/users/:usuarioId', ensureIsAdmin_1.ensureIsAdmin, fetchUserController.handle);
authRoutes.delete('/admin/users/:usuarioId', ensureIsAdmin_1.ensureIsAdmin, deleteUserController.handle);
authRoutes.get('/admin/users', ensureIsAdmin_1.ensureIsAdmin, fetchUsersController.handle);
authRoutes.post('/admin/prestadores', ensureIsAdmin_1.ensureIsAdmin, createPrestadorController.handle);
authRoutes.put('/admin/prestadores/:prestadorId', ensureIsAdmin_1.ensureIsAdmin, updatePrestadorController.handle);
authRoutes.delete('/admin/prestadores/:prestadorId', ensureIsAdmin_1.ensureIsAdmin, deletePrestadorController.handle);
authRoutes.get('/admin/prestadores', ensureIsAdmin_1.ensureIsAdmin, fetchPrestadoresController.handle);
authRoutes.post('/sessions', authUserController.handle);
authRoutes.post('/verificaLogin', verifyAuthMatriculaController.handle);
authRoutes.get('/admin/prestadores/:prestadorId', ensureIsAdmin_1.ensureIsAdmin, fetchPrestadorController.handle);
authRoutes.post('/admin/sessions', authAdminController.handle);
authRoutes.get('/admin/me', ensureIsAdmin_1.ensureIsAdmin, fetchAdminController.handle);
authRoutes.post('/admin/informativos', ensureIsAdmin_1.ensureIsAdmin, createInformativoController.handle);
authRoutes.delete('/admin/informativos/:id', ensureIsAdmin_1.ensureIsAdmin, deleteInformativoController.handle);
authRoutes.put('/admin/informativos/:id', ensureIsAdmin_1.ensureIsAdmin, updateInformativoController.handle);
authRoutes.get('/admin/informativos', ensureIsAdmin_1.ensureIsAdmin, fetchInformativosController.handle);
authRoutes.get('/admin/informativos/:id', ensureIsAdmin_1.ensureIsAdmin, fetchInformativoController.handle);
authRoutes.post('/admin/brindes', ensureIsAdmin_1.ensureIsAdmin, createBrindeController.handle);
authRoutes.delete('/admin/brindes/:id', ensureIsAdmin_1.ensureIsAdmin, deleteBrindeController.handle);
authRoutes.put('/admin/brindes/:id', ensureIsAdmin_1.ensureIsAdmin, updateBrindeController.handle);
authRoutes.get('/admin/brindes', ensureIsAdmin_1.ensureIsAdmin, fetchBrindesController.handle);
authRoutes.get('/admin/brindes/:id', ensureIsAdmin_1.ensureIsAdmin, fetchBrindeController.handle);
authRoutes.get('/brindes', ensureIsAuthenticated_1.ensureAuthenticated, fetchUsuarioBrindesController.handle);
authRoutes.get('/convenios', ensureIsAuthenticated_1.ensureAuthenticated, fetchUsuarioConveniosController.handle);
authRoutes.get('/informativos', ensureIsAuthenticated_1.ensureAuthenticated, fetchUsuarioInformativosController.handle);
authRoutes.post('/admin/convenios', ensureIsAdmin_1.ensureIsAdmin, createConvenioController.handle);
authRoutes.delete('/admin/convenios/:id', ensureIsAdmin_1.ensureIsAdmin, deleteConvenioController.handle);
authRoutes.put('/admin/convenios/:id', ensureIsAdmin_1.ensureIsAdmin, updateConvenioController.handle);
authRoutes.get('/admin/convenios', ensureIsAdmin_1.ensureIsAdmin, fetchConveniosController.handle);
authRoutes.get('/admin/convenios/:id', ensureIsAdmin_1.ensureIsAdmin, fetchConvenioController.handle);
