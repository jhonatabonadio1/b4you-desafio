"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRoutes = void 0;
const express_1 = require("express");
const SignInController_1 = require("../controllers/common/auth/SignInController");
const CreateUserController_1 = require("../controllers/admin/auth/CreateUserController");
const CreateOptionController_1 = require("../controllers/common/options/CreateOptionController");
const ListAllImoveisController_1 = require("../controllers/common/imoveis/ListAllImoveisController");
const ListAllPropertiesController_1 = require("../controllers/common/properties/ListAllPropertiesController");
const ListAllUsersController_1 = require("../controllers/common/users/ListAllUsersController");
const ensureIsAdmin_1 = require("../middlewares/ensureIsAdmin");
const ensureIsAuthenticated_1 = require("../middlewares/ensureIsAuthenticated");
const SearchPropertyController_1 = require("../controllers/common/properties/SearchPropertyController");
const SearchImovelController_1 = require("../controllers/common/imoveis/SearchImovelController");
const ToggleClienteFuturoController_1 = require("../controllers/common/properties/ToggleClienteFuturoController");
const DeleteImageController_1 = require("../controllers/common/images/DeleteImageController");
const DeleteImovelController_1 = require("../controllers/common/imoveis/DeleteImovelController");
const DeletePropertyController_1 = require("../controllers/common/properties/DeletePropertyController");
const DownloadImovelImagesController_1 = require("../controllers/common/imoveis/DownloadImovelImagesController");
const EditOptionController_1 = require("../controllers/common/options/EditOptionController");
const FetchUserImoveisController_1 = require("../controllers/common/imoveis/FetchUserImoveisController");
const FetchUserImovelController_1 = require("../controllers/common/imoveis/FetchUserImovelController");
const FetchUserPropertiesController_1 = require("../controllers/common/properties/FetchUserPropertiesController");
const FetchUserPropertyController_1 = require("../controllers/common/properties/FetchUserPropertyController");
const CreateFonteController_1 = require("../controllers/admin/fontes/CreateFonteController");
const FetchFontesController_1 = require("../controllers/admin/fontes/FetchFontesController");
const DeleteFontesController_1 = require("../controllers/admin/fontes/DeleteFontesController");
const FetchLocationsController_1 = require("../controllers/admin/locations/FetchLocationsController");
const CreateLocationController_1 = require("../controllers/admin/locations/CreateLocationController");
const DeleteLocationController_1 = require("../controllers/admin/locations/DeleteLocationController");
const FetchUserDataController_1 = require("../controllers/common/users/FetchUserDataController");
const SaveEnvioController_1 = require("../controllers/common/envios/SaveEnvioController");
const SaveImovelController_1 = require("../controllers/common/imoveis/SaveImovelController");
const SavePropertyController_1 = require("../controllers/common/properties/SavePropertyController");
const FetchTiposController_1 = require("../controllers/admin/tipos/FetchTiposController");
const CreateTipoController_1 = require("../controllers/admin/tipos/CreateTipoController");
const DeleteTipoController_1 = require("../controllers/admin/tipos/DeleteTipoController");
const UpdateImovelController_1 = require("../controllers/common/imoveis/UpdateImovelController");
const UpdatePropertyController_1 = require("../controllers/common/properties/UpdatePropertyController");
const UploadImageController_1 = require("../controllers/common/images/UploadImageController");
const FetchUsersController_1 = require("../controllers/admin/users/FetchUsersController");
const UpdateUserController_1 = require("../controllers/admin/users/UpdateUserController");
const DeleteUserController_1 = require("../controllers/admin/users/DeleteUserController");
const upload_1 = require("../middlewares/upload");
const authRoutes = (0, express_1.Router)();
exports.authRoutes = authRoutes;
const signInController = new SignInController_1.SignInController();
const createUserController = new CreateUserController_1.CreateUserController();
const createOptionController = new CreateOptionController_1.CreateOptionController();
const listAllImoveisController = new ListAllImoveisController_1.ListAllImoveisController();
const listAllPropertiesController = new ListAllPropertiesController_1.ListAllPropertiesController();
const listAllUsersController = new ListAllUsersController_1.ListAllUsersController();
const searchPropertyController = new SearchPropertyController_1.SearchPropertyController();
const searchImovelController = new SearchImovelController_1.SearchImovelController();
const toggleClienteFuturoController = new ToggleClienteFuturoController_1.ToggleClienteFuturoController();
const deleteImageController = new DeleteImageController_1.DeleteImageController();
const deleteImovelController = new DeleteImovelController_1.DeleteImovelController();
const deletePropertyController = new DeletePropertyController_1.DeletePropertyController();
const downloadImovelImagesController = new DownloadImovelImagesController_1.DownloadImovelImagesController();
const editOptionController = new EditOptionController_1.EditOptionController();
const fetchUserImoveisController = new FetchUserImoveisController_1.FetchUserImoveisController();
const fetchUserImovelController = new FetchUserImovelController_1.FetchUserImovelController();
const fetchUserPropertiesController = new FetchUserPropertiesController_1.FetchUserPropertiesController();
const fetchUserPropertyController = new FetchUserPropertyController_1.FetchUserPropertyController();
const fetchFontesController = new FetchFontesController_1.FetchFontesController();
const createFonteController = new CreateFonteController_1.CreateFonteController();
const deleteFontesController = new DeleteFontesController_1.DeleteFontesController();
const fetchLocationsController = new FetchLocationsController_1.FetchLocationsController();
const createLocationController = new CreateLocationController_1.CreateLocationController();
const deleteLocationController = new DeleteLocationController_1.DeleteLocationController();
const fetchUserDataController = new FetchUserDataController_1.FetchUserDataController();
const saveEnvioController = new SaveEnvioController_1.SaveEnvioController();
const saveImovelController = new SaveImovelController_1.SaveImovelController();
const savePropertyController = new SavePropertyController_1.SavePropertyController();
const fetchTiposController = new FetchTiposController_1.FetchTiposController();
const createTipoController = new CreateTipoController_1.CreateTipoController();
const deleteTipoController = new DeleteTipoController_1.DeleteTipoController();
const updateImovelController = new UpdateImovelController_1.UpdateImovelController();
const updatePropertyController = new UpdatePropertyController_1.UpdatePropertyController();
const uploadImageController = new UploadImageController_1.UploadImageController();
const fetchUsersController = new FetchUsersController_1.FetchUsersController();
const updateUserController = new UpdateUserController_1.UpdateUserController();
const deleteUserController = new DeleteUserController_1.DeleteUserController();
authRoutes.post('/auth/login', signInController.handle);
authRoutes.post('/auth/register', ensureIsAdmin_1.ensureIsAdmin, createUserController.handle);
authRoutes.put('/add-option/:id', ensureIsAuthenticated_1.ensureAuthenticated, createOptionController.handle);
authRoutes.get('/all-imoveis', ensureIsAuthenticated_1.ensureAuthenticated, listAllImoveisController.handle);
authRoutes.get('/all-properties', ensureIsAuthenticated_1.ensureAuthenticated, listAllPropertiesController.handle);
authRoutes.get('/all-users', ensureIsAuthenticated_1.ensureAuthenticated, listAllUsersController.handle);
authRoutes.get('/buscaCliente', ensureIsAuthenticated_1.ensureAuthenticated, searchPropertyController.handle);
authRoutes.get('/buscaImovel', ensureIsAuthenticated_1.ensureAuthenticated, searchImovelController.handle);
authRoutes.post('/cliente-futuro', ensureIsAuthenticated_1.ensureAuthenticated, toggleClienteFuturoController.handle);
authRoutes.delete('/delete-image', ensureIsAuthenticated_1.ensureAuthenticated, deleteImageController.handle);
authRoutes.delete('/delete-imovel/:id', ensureIsAuthenticated_1.ensureAuthenticated, deleteImovelController.handle);
authRoutes.delete('/delete-property/:id', ensureIsAuthenticated_1.ensureAuthenticated, deletePropertyController.handle);
authRoutes.get('/download-images', ensureIsAuthenticated_1.ensureAuthenticated, downloadImovelImagesController.handle);
authRoutes.put('/edit-option/:id', ensureIsAuthenticated_1.ensureAuthenticated, editOptionController.handle);
authRoutes.get('/fetch-imoveis', ensureIsAuthenticated_1.ensureAuthenticated, fetchUserImoveisController.handle);
authRoutes.get('/fetch-imovel', ensureIsAuthenticated_1.ensureAuthenticated, fetchUserImovelController.handle);
authRoutes.get('/fetch-properties', ensureIsAuthenticated_1.ensureAuthenticated, fetchUserPropertiesController.handle);
authRoutes.get('/fetch-property', ensureIsAuthenticated_1.ensureAuthenticated, fetchUserPropertyController.handle);
authRoutes.get('/fontes', ensureIsAdmin_1.ensureIsAdmin, fetchFontesController.handle);
authRoutes.post('/fontes', ensureIsAdmin_1.ensureIsAdmin, createFonteController.handle);
authRoutes.delete('/fontes', ensureIsAdmin_1.ensureIsAdmin, deleteFontesController.handle);
authRoutes.get('/locations', ensureIsAdmin_1.ensureIsAdmin, fetchLocationsController.handle);
authRoutes.post('/locations', ensureIsAdmin_1.ensureIsAdmin, createLocationController.handle);
authRoutes.delete('/locations', ensureIsAdmin_1.ensureIsAdmin, deleteLocationController.handle);
authRoutes.get('/me', ensureIsAuthenticated_1.ensureAuthenticated, fetchUserDataController.handle);
authRoutes.post('/save-envio', ensureIsAuthenticated_1.ensureAuthenticated, saveEnvioController.handle);
authRoutes.post('/save-imovel', ensureIsAuthenticated_1.ensureAuthenticated, saveImovelController.handle);
authRoutes.post('/save-property', ensureIsAuthenticated_1.ensureAuthenticated, savePropertyController.handle);
authRoutes.get('/tipos', ensureIsAdmin_1.ensureIsAdmin, fetchTiposController.handle);
authRoutes.post('/tipos', ensureIsAdmin_1.ensureIsAdmin, createTipoController.handle);
authRoutes.delete('/tipos', ensureIsAdmin_1.ensureIsAdmin, deleteTipoController.handle);
authRoutes.put('/update-imovel', ensureIsAuthenticated_1.ensureAuthenticated, updateImovelController.handle);
authRoutes.put('/update-property', ensureIsAuthenticated_1.ensureAuthenticated, updatePropertyController.handle);
authRoutes.post('/upload-image', upload_1.upload.single('file'), (req, res) => {
    uploadImageController.handle(req, res);
});
authRoutes.get('/users', ensureIsAdmin_1.ensureIsAdmin, fetchUsersController.handle);
authRoutes.put('/users', ensureIsAdmin_1.ensureIsAdmin, updateUserController.handle);
authRoutes.delete('/users', ensureIsAdmin_1.ensureIsAdmin, deleteUserController.handle);
