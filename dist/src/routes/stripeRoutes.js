"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stripeRoutes = void 0;
const express_1 = require("express");
const ensureIsAuthenticated_1 = require("../middlewares/ensureIsAuthenticated");
const CreateCheckoutSessionController_1 = require("../controllers/common/stripe/CreateCheckoutSessionController");
const VerifyCheckoutSessionExistsController_1 = require("../controllers/common/stripe/VerifyCheckoutSessionExistsController");
const userInBlacklist_1 = require("../middlewares/userInBlacklist");
const CreatePortalSessionController_1 = require("../controllers/common/stripe/CreatePortalSessionController");
const stripeRoutes = (0, express_1.Router)();
exports.stripeRoutes = stripeRoutes;
const createPortalSessionController = new CreatePortalSessionController_1.CreatePortalSessionController();
const createCheckoutSessionController = new CreateCheckoutSessionController_1.CreateCheckoutSessionController();
const verifyCheckoutSessionExistsController = new VerifyCheckoutSessionExistsController_1.VerifyCheckoutSessionExistsController();
stripeRoutes.post('/stripe/create-checkout', ensureIsAuthenticated_1.ensureAuthenticated, userInBlacklist_1.userInBlacklist, createCheckoutSessionController.handle);
stripeRoutes.get('/stripe/session/:sessionId', ensureIsAuthenticated_1.ensureAuthenticated, userInBlacklist_1.userInBlacklist, verifyCheckoutSessionExistsController.handle);
stripeRoutes.get('/stripe/portal', ensureIsAuthenticated_1.ensureAuthenticated, userInBlacklist_1.userInBlacklist, createPortalSessionController.handle);
