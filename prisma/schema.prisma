// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model Usuario {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  nome        String    
  matricula   String
  avatarUrl   String?
  email       String
  cpf         String
  phone       String
  birth       DateTime
  password    String
  tipoAcesso  String?   @default("associado")

  agendamentos  Agendamento[]
  validacao_brinde ValidacaoBrinde[]
  veiculos  Veiculo[]
  validacao_agendamento ValidacaoAgendamento[]

  deleted     Boolean   @default(false)
  created_at  DateTime  @default(now())

  @@map("usuarios")
}

model Prestador {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  razaoSocial String    
  avatarUrl   String?
  latitude    Float
  longitude   Float
  inscricao   String
  tipoInscricao   String?     @default("cnpj")
  endereco    String
  cidade      String
  estado      String
  bairro      String
  cep         String
  ativo       Boolean   @default(true)
  password    String
  email       String

  agendamentos Agendamento[]
  validacao_brinde ValidacaoBrinde[]
  validacao_agendamento ValidacaoAgendamento[]

  deleted     Boolean   @default(false)
  created_at  DateTime  @default(now())

  @@map("prestadores")
}

model Brinde {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  nome                  String 
  qrcode                String?
  dataLimite            DateTime?
  imageUrl              String?
  data                  String?
  dataDisponibilidade   DateTime
  ativo                 Boolean         @default(false)
  
  created_at            DateTime        @default(now())

  todosUsuarios         Boolean
  todosPrestadores      Boolean

  usuariosEspecificos              String[]
  prestadoresEspecificos           String[]

  validacao_brinde ValidacaoBrinde[]

  deleted     Boolean   @default(false)

  @@map("brindes")
}

model ValidacaoBrinde{
   id                    String          @id @default(auto()) @map("_id") @db.ObjectId
   usuario   Usuario     @relation(fields: [usuarioId], references: [id])
   usuarioId String      @db.ObjectId

   prestador   Prestador     @relation(fields: [prestadorId], references: [id])
   prestadorId String       @db.ObjectId

   created_at DateTime    @default(now())

   brinde   Brinde     @relation(fields: [brindeId], references: [id])
   brindeId String       @db.ObjectId
   
   @@map("validacao_brindes")
}

model Servico {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  nome        String
  imageUrl    String?
  datasDisponiveis String[]

  agendamentos  Agendamento[]
  prestadores   String[]

  exigeVeiculo Boolean?Â @default(false)
  precoCarroGrande Int?
  precoCarroPequeno Int?
  preco Int?

  diaResetLimite  Int    @default(20)

  opcoesAdicionais OpcaoAdicional[] @relation("ServicoOpcoesAdicionais")

  usoMensal   Int?

  ativo       Boolean     @default(true)
  deleted     Boolean     @default(false)
  created_at  DateTime    @default(now())

  @@map("servicos")
}

model OpcaoAdicional {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  nome        String
  value       Int?

  usoMensal   Int?

  servico     Servico? @relation("ServicoOpcoesAdicionais", fields: [servicoId], references: [id])
  servicoId   String   @db.ObjectId
  
  @@map("opcoes_adicionais")
}

model ValidacaoAgendamento {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  usuario        Usuario       @relation(fields: [usuarioId], references: [id])
  usuarioId      String        @db.ObjectId

  prestador      Prestador     @relation(fields: [prestadorId], references: [id])
  prestadorId    String        @db.ObjectId

  estrelas       Int?        
  message        String?
  avaliado       Boolean?      @default(false)
  dataAvaliacao  DateTime?       

  bomAtendimento  Boolean?
  servicoCompleto Boolean?

  agendamento    Agendamento   @relation(fields: [agendamentoId], references: [id])
  agendamentoId  String        @db.ObjectId

  created_at     DateTime      @default(now())

  @@map("validacao_agendamentos")
}

model Agendamento {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId

  prestador   Prestador @relation(fields: [prestadorId], references: [id])
  prestadorId String    @db.ObjectId
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId   String    @db.ObjectId

  servico     Servico  @relation(fields: [servicoId], references: [id])
  servicoId   String    @db.ObjectId

  opcoesAdicionais String[]

  veiculo Veiculo? @relation(fields: [veiculoId], references: [id])
  veiculoId String?    @db.ObjectId

  valor       Int?

  qrcode      String?
  data        DateTime?
  ativo       Boolean   @default(true)

  semValidade   Boolean?  @default(false)

  validacao_agendamento ValidacaoAgendamento[]

  deleted     Boolean   @default(false)
  created_at  DateTime  @default(now())

  @@map("agendamentos")
}

model Veiculo{
   id          String    @id @default(auto()) @map("_id") @db.ObjectId
   nome        String
   usuario     Usuario   @relation(fields: [usuarioId], references: [id])
   usuarioId   String    @db.ObjectId
   placa       String
   categoria   String
   marca       String?
   modelo      String?

   agendamentos Agendamento[]

   deleted     Boolean   @default(false)
   created_at  DateTime  @default(now())
}

model Informativos {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  titulo      String
  texto       String?
  bannerUrl   String?
  url         String?
  html        String?

  deleted     Boolean     @default(false)
  created_at  DateTime    @default(now())

  @@map("informativos")
}

model Convenios {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  titulo      String
  texto       String?
  bannerUrl   String
  url         String
  html        String?
  categoria   String
  ativo       Boolean     @default(false)

  deleted     Boolean     @default(false)
  created_at  DateTime    @default(now())

  @@map("convenios")
}