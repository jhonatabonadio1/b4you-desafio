<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Monitor</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .console {
      background-color: #000;
      padding: 15px;
      height: 300px;
      overflow-y: auto;
      font-family: monospace;
      border-radius: 4px;
      color: #fff;
    }
    .log-error {
      color: red;
    }
    .log-warn {
      color: orange;
    }
    .log-info {
      color: blue;
    }
    .log-success {
      color: green;
    }
  </style>
</head>
<body>
<div class="container my-4">
  <h1 class="mb-4">Monitor</h1>
  
  <div class="card mb-4">
    <div class="card-header">Status de Saúde</div>
    <div class="card-body health-info">
      <p><strong>Uptime:</strong> <span id="uptime">Carregando...</span></p>
      <p><strong>Uso de Memória:</strong> <span id="memoryUsage">Carregando...</span></p>
      <p><strong>Data/Hora Atual:</strong> <span id="currentDate">Carregando...</span></p>
      <p><strong>Conexão com DB:</strong> <span id="dbStatus">Carregando...</span></p>
      <p>
        <strong>Logs de Erro:</strong> <span id="errorCount">Carregando...</span> &nbsp;
        <strong>Logs de Sucesso:</strong> <span id="successCount">Carregando...</span>
      </p>
    </div>
  </div>
  
  <div class="card mb-4">
    <div class="card-header">Logs em Tempo Real</div>
    <div class="card-body">
      <div id="logConsole" class="console">Aguardando logs...</div>
    </div>
  </div>
  
  <div class="card mb-4">
    <div class="card-header">Usuários Criados Hoje</div>
    <div class="card-body">
      <% if (users && users.length > 0) { %>
        <table class="table table-striped">
          <thead>
            <tr>
              <th>ID</th>
              <th>Email</th>
              <th>Nome</th>
              <th>Sobrenome</th>
              <th>Criado Em</th>
            </tr>
          </thead>
          <tbody>
            <% users.forEach(function(user) { %>
              <tr>
                <td><%= user.id %></td>
                <td><%= user.email %></td>
                <td><%= user.firstName %></td>
                <td><%= user.lastName %></td>
                <td><%= user.createdAt.toLocaleString() %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      <% } else { %>
        <p>Nenhum usuário criado hoje.</p>
      <% } %>
    </div>
  </div>

  <!-- Seção de Campanhas Criadas Hoje -->
  <div class="card mb-4">
    <div class="card-header">Campanhas Criadas Hoje</div>
    <div class="card-body">
      <% if (campaings && campaings.length > 0) { %>
        <table class="table table-striped">
          <thead>
            <tr>
              <th>ID</th>
              <th>Nome</th>
              <th>Orçamento</th>
              <th>Author</th>
              <th>Criado Em</th>
            </tr>
          </thead>
          <tbody>
            <% campaings.forEach(function(campaing) { %>
              <tr>
                <td><%= campaing.id %></td>
                <td><%= campaing.nome %></td>
                <td><%= (campaing.orcamento / 100).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) %></td>
                <td><%= campaing.user.email %></td>
                <td><%= campaing.createdAt.toLocaleString() %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      <% } else { %>
        <p>Nenhuma campanha criada hoje.</p>
      <% } %>
    </div>
  </div>
</div>

<script>
  
  const ws = new WebSocket('ws://localhost:3001');
  console.log(ws)
  ws.onopen = () => {
    console.log('Conectado ao servidor de monitoramento via WebSocket.');
  };

  ws.onmessage = (event) => {
    try {
      const payload = JSON.parse(event.data);
      if (payload.type === 'monitor-update') {
        const data = payload.data;

        document.getElementById('uptime').innerText = data.health.uptime;
        document.getElementById('memoryUsage').innerText = data.health.memoryUsage;
        document.getElementById('currentDate').innerText = data.health.currentDate;
        document.getElementById('dbStatus').innerText = data.health.dbConnection || 'Desconhecido';
 
        document.getElementById('errorCount').innerText = data.health.transactions.errors;
        document.getElementById('successCount').innerText = data.health.transactions.success;
        

        const logConsole = document.getElementById('logConsole');
        if (data.logs && data.logs.length > 0) {
          logConsole.innerHTML = data.logs.map(log => {
            let logData;
            try {
              logData = JSON.parse(log);
            } catch(e) {
              logData = { message: log, level: 'info', timestamp: '' };
            }
            let levelClass = 'log-info';
            if (logData.level) {
              switch(logData.level.toLowerCase()) {
                case 'error':
                  levelClass = 'log-error';
                  break;
                case 'warn':
                  levelClass = 'log-warn';
                  break;
                case 'info':
                  levelClass = 'log-info';
                  break;
                case 'success':
                  levelClass = 'log-success';
                  break;
                default:
                  levelClass = 'log-info';
              }
            }
            return `<div class="${levelClass}">[${logData.timestamp || ''}] ${logData.level ? logData.level.toUpperCase() : 'INFO'}: ${logData.message}</div>`;
          }).join('');
        
          logConsole.scrollTop = logConsole.scrollHeight;
        } else {
          logConsole.innerHTML = '<div>Nenhum log disponível.</div>';
        }
      }
    } catch (error) {
      console.error('Erro ao processar mensagem:', error);
    }
  };

  ws.onerror = (error) => {
    console.error('Erro no WebSocket:', error);
  };

  ws.onclose = () => {
    console.log('Conexão com o servidor de monitoramento encerrada.');
  };
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
